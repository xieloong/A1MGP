Index: app/src/main/java/com/example/week4real/PowerUp3.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.week4real;\r\n\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.Canvas;\r\nimport android.util.DisplayMetrics;\r\nimport android.view.SurfaceView;\r\n\r\npublic class PowerUp3 implements EntityBase,Collidable{\r\n    private Bitmap bmp = null;\r\n    private Bitmap scaledbmp =null;\r\n    private float xPos = 0;\r\n    private float xStart = 0;\r\n    private float yPos = 0;\r\n    private float screenHeight = 0;\r\n    private float speed = 0;\r\n    private boolean isDone = false;\r\n    private boolean isInit = false;\r\n    EarthEntity earthEntity = null;\r\n    int ScreenWidth, ScreenHeight;\r\n\r\n    PowerUp3(float xPosition, float yPosition, EarthEntity earthEntity)\r\n    {\r\n        xPos = xPosition;\r\n        yPos = yPosition;\r\n        this.earthEntity = earthEntity;\r\n    }\r\n\r\n\r\n    @Override\r\n    public boolean IsDone() {\r\n        return isDone;\r\n    }\r\n\r\n    @Override\r\n    public void SetIsDone(boolean _isDone) {\r\n        isDone = _isDone;\r\n    }\r\n\r\n    @Override\r\n    public void Init(SurfaceView _view) {\r\n\r\n        // New method using our own resource manager : Returns pre-loaded one if exists\r\n        bmp = ResourceManager.Instance.GetBitmap(R.drawable.powerup3);\r\n        DisplayMetrics metrics=_view.getResources().getDisplayMetrics();\r\n        ScreenHeight = metrics.heightPixels;\r\n        ScreenWidth = metrics.widthPixels;\r\n\r\n        scaledbmp = Bitmap.createScaledBitmap(bmp,ScreenWidth/20,ScreenHeight/20,true);\r\n\r\n\r\n        isInit = true;\r\n    }\r\n\r\n    @Override\r\n    public void Update(float _dt) {\r\n\r\n        if(GameSystem.Instance.GetIsPaused())\r\n            return;\r\n\r\n        xPos -= _dt * 100;\r\n        // Delete Powerup outside of screen\r\n        if(xPos < -ScreenWidth)\r\n        {\r\n            SetIsDone(true);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void Render(Canvas _canvas) {\r\n        _canvas.drawBitmap(scaledbmp,xPos,yPos, null);\r\n    }\r\n\r\n    @Override\r\n    public boolean IsInit() {\r\n\r\n        return isInit;\r\n    }\r\n\r\n    @Override\r\n    public int GetRenderLayer() {\r\n        return LayerConstants.UI_LAYER;\r\n    }\r\n\r\n    @Override\r\n    public void SetRenderLayer(int _newLayer) {\r\n        return;\r\n    }\r\n\r\n\r\n\r\n    @Override\r\n    public EntityBase.ENTITY_TYPE GetEntityType(){ return EntityBase.ENTITY_TYPE.ENT_TICKPOWERUP;}\r\n\r\n    public static PowerUp3 Create(float xPosition, float yPosition, EarthEntity earthEntity)\r\n    {\r\n        PowerUp3 result = new PowerUp3(xPosition,yPosition,earthEntity);\r\n        EntityManager.Instance.AddEntity(result, EntityBase.ENTITY_TYPE.ENT_SEEDPOWERUP);\r\n        return result;\r\n    }\r\n\r\n    @Override\r\n    public String GetType() {\r\n        return \"SeedPowerUp\";\r\n    }\r\n\r\n    @Override\r\n    public float GetPosX() {\r\n        return xPos;\r\n    }\r\n\r\n    @Override\r\n    public float GetPosY() {\r\n        return yPos;\r\n    }\r\n\r\n    @Override\r\n    public float GetRadius() {\r\n        return scaledbmp.getWidth();\r\n    }\r\n\r\n    @Override\r\n    public void OnHit(Collidable _other) {\r\n        if(_other.GetType() != this.GetType()\r\n                && _other.GetType() == \"PlayerEntity\") {  // Another entity\r\n            earthEntity.SetHealthPoints(earthEntity.GetHealthPoints() + 10);\r\n            SetIsDone(true);\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/week4real/PowerUp3.java b/app/src/main/java/com/example/week4real/PowerUp3.java
--- a/app/src/main/java/com/example/week4real/PowerUp3.java	(revision 06625655675e8faf1ac84d84a1b7dbfa2d8144e2)
+++ b/app/src/main/java/com/example/week4real/PowerUp3.java	(date 1639143923770)
@@ -115,7 +115,7 @@
 
     @Override
     public float GetRadius() {
-        return scaledbmp.getWidth();
+        return (scaledbmp.getWidth() * 0.5f);
     }
 
     @Override
Index: app/src/main/java/com/example/week4real/Collision.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.week4real;\r\n\r\n// Created by TanSiewLan2021\r\n\r\npublic class Collision {\r\n\r\n    public static boolean SphereToSphere(float x1, float y1, float radius1, float x2, float y2, float radius2)\r\n    {\r\n        float xVec = x2 - x1;\r\n        float yVec = y2 - y1;\r\n\r\n        float distSquared = xVec * xVec + yVec * yVec;\r\n\r\n        float rSquared = radius1 + radius2;\r\n        rSquared *= rSquared;\r\n\r\n        if (distSquared > rSquared)\r\n            return false;\r\n\r\n        return true;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/week4real/Collision.java b/app/src/main/java/com/example/week4real/Collision.java
--- a/app/src/main/java/com/example/week4real/Collision.java	(revision 06625655675e8faf1ac84d84a1b7dbfa2d8144e2)
+++ b/app/src/main/java/com/example/week4real/Collision.java	(date 1639145938311)
@@ -19,4 +19,14 @@
 
         return true;
     }
+    public static boolean BoxToBox(float x1, float y1, float radius1, float x2, float y2, float radius2)
+    {
+        // Collision X-Axis
+        // Min x = xPos , Max x = x + bmp.getWidth
+
+
+        // Collision Y-Axis
+        // Min y = yPos , Max y = y + bmp.getHeight
+       return true;
+    }
 }
Index: app/src/main/java/com/example/week4real/PowerUp2.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.week4real;\r\n\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.Canvas;\r\nimport android.util.DisplayMetrics;\r\nimport android.view.SurfaceView;\r\n\r\npublic class PowerUp2 implements EntityBase, Collidable{\r\n        private Bitmap bmp = null;\r\n        private Bitmap scaledbmp =null;\r\n        private float xPos = 0;\r\n        private float xStart = 0;\r\n        private float yPos = 0;\r\n        private float screenHeight = 0;\r\n        private float speed = 0;\r\n        private boolean isDone = false;\r\n        private boolean isInit = false;\r\n        EarthEntity earthEntity = null;\r\n        int ScreenWidth, ScreenHeight;\r\n\r\n        PowerUp2(float xPosition, float yPosition, EarthEntity earthEntity)\r\n        {\r\n            xPos = xPosition;\r\n            yPos = yPosition;\r\n            this.earthEntity = earthEntity;\r\n        }\r\n\r\n\r\n        @Override\r\n        public boolean IsDone() {\r\n            return isDone;\r\n        }\r\n\r\n        @Override\r\n        public void SetIsDone(boolean _isDone) {\r\n            isDone = _isDone;\r\n        }\r\n\r\n        @Override\r\n        public void Init(SurfaceView _view) {\r\n\r\n            // New method using our own resource manager : Returns pre-loaded one if exists\r\n            bmp = ResourceManager.Instance.GetBitmap(R.drawable.powerup2);\r\n            DisplayMetrics metrics=_view.getResources().getDisplayMetrics();\r\n            ScreenHeight = metrics.heightPixels;\r\n            ScreenWidth = metrics.widthPixels;\r\n\r\n            scaledbmp = Bitmap.createScaledBitmap(bmp,ScreenWidth/20,ScreenHeight/20,true);\r\n\r\n\r\n            isInit = true;\r\n        }\r\n\r\n        @Override\r\n        public void Update(float _dt) {\r\n\r\n            if(GameSystem.Instance.GetIsPaused())\r\n                return;\r\n\r\n            xPos -= _dt * 100;\r\n            // Delete Powerup outside of screen\r\n            if(xPos < -ScreenWidth)\r\n            {\r\n                SetIsDone(true);\r\n            }\r\n        }\r\n\r\n        @Override\r\n        public void Render(Canvas _canvas) {\r\n            _canvas.drawBitmap(scaledbmp,xPos,yPos, null);\r\n        }\r\n\r\n        @Override\r\n        public boolean IsInit() {\r\n\r\n            return isInit;\r\n        }\r\n\r\n        @Override\r\n        public int GetRenderLayer() {\r\n            return LayerConstants.UI_LAYER;\r\n        }\r\n\r\n        @Override\r\n        public void SetRenderLayer(int _newLayer) {\r\n            return;\r\n        }\r\n\r\n\r\n\r\n        @Override\r\n        public ENTITY_TYPE GetEntityType(){ return ENTITY_TYPE.ENT_TICKPOWERUP;}\r\n\r\n        public static PowerUp2 Create(float xPosition, float yPosition, EarthEntity earthEntity)\r\n        {\r\n            PowerUp2 result = new PowerUp2(xPosition,yPosition,earthEntity);\r\n            EntityManager.Instance.AddEntity(result, ENTITY_TYPE.ENT_TICKPOWERUP);\r\n            return result;\r\n        }\r\n\r\n        @Override\r\n        public String GetType() {\r\n            return \"TickPowerUp\";\r\n        }\r\n\r\n        @Override\r\n        public float GetPosX() {\r\n            return xPos;\r\n        }\r\n\r\n        @Override\r\n        public float GetPosY() {\r\n            return yPos;\r\n        }\r\n\r\n        @Override\r\n        public float GetRadius() {\r\n            return scaledbmp.getWidth();\r\n        }\r\n\r\n        @Override\r\n        public void OnHit(Collidable _other) {\r\n            if(_other.GetType() != this.GetType()\r\n                    && _other.GetType() == \"PlayerEntity\") {  // Another entity\r\n                earthEntity.Shield(5.0f);\r\n                SetIsDone(true);\r\n            }\r\n        }\r\n    }\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/week4real/PowerUp2.java b/app/src/main/java/com/example/week4real/PowerUp2.java
--- a/app/src/main/java/com/example/week4real/PowerUp2.java	(revision 06625655675e8faf1ac84d84a1b7dbfa2d8144e2)
+++ b/app/src/main/java/com/example/week4real/PowerUp2.java	(date 1639143923755)
@@ -115,7 +115,7 @@
 
         @Override
         public float GetRadius() {
-            return scaledbmp.getWidth();
+            return (scaledbmp.getWidth() * 0.5f);
         }
 
         @Override
Index: app/src/main/java/com/example/week4real/EntityManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.week4real;\r\n\r\nimport android.graphics.Canvas;\r\nimport android.util.DisplayMetrics;\r\nimport android.util.Log;\r\nimport android.view.SurfaceView;\r\n\r\nimport java.util.Collections;\r\nimport java.util.Comparator;\r\nimport java.util.LinkedList;\r\n\r\n// Created by TanSiewLan2021\r\n\r\npublic class EntityManager {\r\n\r\n    public final static EntityManager Instance = new EntityManager();\r\n    private LinkedList<EntityBase> entityList = new LinkedList<EntityBase>();\r\n    private LinkedList<EntityBase> DeleteList = new LinkedList<EntityBase>();\r\n    private SurfaceView view = null;\r\n\r\n    private EntityManager()\r\n    {\r\n    }\r\n\r\n    public void Init(SurfaceView _view)\r\n    {\r\n        view = _view;\r\n    }\r\n\r\n    public void Update(float _dt) {\r\n        LinkedList<EntityBase> removalList = new LinkedList<EntityBase>();\r\n\r\n        // Update all\r\n        for (int i = 0; i < entityList.size(); ++i) {\r\n            // Lets check if is init, initialize if not\r\n            if (!entityList.get(i).IsInit()) {\r\n                entityList.get(i).Init(view);\r\n            }\r\n\r\n            entityList.get(i).Update(_dt);\r\n\r\n            // Check if need to clean up\r\n            if (entityList.get(i).IsDone()) {\r\n                // Done! Time to add to the removal list\r\n                removalList.add(entityList.get(i));\r\n            }\r\n        }\r\n\r\n        for (EntityBase currEntity : entityList) {\r\n            // Lets check if is init, initialize if not\r\n            if (!currEntity.IsInit())\r\n                currEntity.Init(view);\r\n\r\n            currEntity.Update(_dt);\r\n\r\n            // Check if need to clean up\r\n            if (currEntity.IsDone()) {\r\n                // Done! Time to add to the removal list\r\n                removalList.add(currEntity);\r\n            }\r\n        }\r\n\r\n        // Remove all entities that are done\r\n        for (EntityBase currEntity : removalList) {\r\n            entityList.remove(currEntity);\r\n        }\r\n        removalList.clear(); // Clean up of removal list\r\n\r\n        // Collision Check\r\n        for (int i = 0; i < entityList.size(); ++i) {\r\n            EntityBase currEntity = entityList.get(i);\r\n\r\n            if (currEntity instanceof Collidable) {\r\n                Collidable first = (Collidable) currEntity;\r\n\r\n                for (int j = i + 1; j < entityList.size(); ++j) {\r\n                    EntityBase otherEntity = entityList.get(j);\r\n\r\n                    if (otherEntity instanceof Collidable) {\r\n                        Collidable second = (Collidable) otherEntity;\r\n\r\n                        if (Collision.SphereToSphere(first.GetPosX(), first.GetPosY(), first.GetRadius(), second.GetPosX(), second.GetPosY(), second.GetRadius())) {\r\n                            first.OnHit(second);\r\n                            second.OnHit(first);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Check if need to clean up\r\n            if (currEntity.IsDone()) {\r\n                removalList.add(currEntity);\r\n            }\r\n        }\r\n\r\n        // Remove all entities that are done\r\n        for (EntityBase currEntity : removalList) {\r\n            entityList.remove(currEntity);\r\n        }\r\n        removalList.clear();\r\n\r\n    }\r\n\r\n    public void Render(Canvas _canvas)\r\n    {\r\n      \r\n        // Use the new \"rendering layer\" to sort the render order\r\n        Collections.sort(entityList, new Comparator<EntityBase>() {\r\n            @Override\r\n            public int compare(EntityBase o1, EntityBase o2) {\r\n                return o1.GetRenderLayer() - o2.GetRenderLayer();\r\n            }\r\n        });\r\n\r\n        for(int i = 0; i <entityList.size(); ++i)\r\n        {\r\n            entityList.get(i).Render(_canvas);\r\n        }\r\n    }\r\n\r\n    public void AddEntity(EntityBase _newEntity, EntityBase.ENTITY_TYPE entity_type)\r\n    {\r\n        entityList.add(_newEntity);\r\n    }\r\n\r\n\r\n    public void Clean()\r\n    {\r\n        entityList.clear();\r\n    }\r\n}\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/week4real/EntityManager.java b/app/src/main/java/com/example/week4real/EntityManager.java
--- a/app/src/main/java/com/example/week4real/EntityManager.java	(revision 06625655675e8faf1ac84d84a1b7dbfa2d8144e2)
+++ b/app/src/main/java/com/example/week4real/EntityManager.java	(date 1639130543894)
@@ -83,6 +83,11 @@
                             first.OnHit(second);
                             second.OnHit(first);
                         }
+                        else if(Collision.BoxToBox(first.GetPosX(), first.GetPosY(), first.GetRadius(), second.GetPosX(), second.GetPosY(), second.GetRadius()))
+                        {
+                            first.OnHit(second);
+                            second.OnHit(first);
+                        }
                     }
                 }
             }
Index: app/src/main/java/com/example/week4real/PowerUp1.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.week4real;\r\n\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.Canvas;\r\nimport android.graphics.Matrix;\r\nimport android.util.DisplayMetrics;\r\nimport android.view.SurfaceView;\r\n\r\npublic class PowerUp1 implements EntityBase, Collidable{\r\n    private Bitmap bmp = null;\r\n    private Bitmap scaledbmp =null;\r\n    private float xPos = 0;\r\n    private float xStart = 0;\r\n    private float yPos = 0;\r\n    private float screenHeight = 0;\r\n    private float speed = 0;\r\n    private boolean isDone = false;\r\n    private boolean isInit = false;\r\n    EarthEntity earthEntity = null;\r\n    int ScreenWidth, ScreenHeight;\r\n\r\n    PowerUp1(float xPosition, float yPosition, EarthEntity earthEntity)\r\n    {\r\n        xPos = xPosition;\r\n        yPos = yPosition;\r\n        this.earthEntity = earthEntity;\r\n    }\r\n\r\n\r\n    @Override\r\n    public boolean IsDone() {\r\n        return isDone;\r\n    }\r\n\r\n    @Override\r\n    public void SetIsDone(boolean _isDone) {\r\n        isDone = _isDone;\r\n    }\r\n\r\n    @Override\r\n    public void Init(SurfaceView _view) {\r\n\r\n        // New method using our own resource manager : Returns pre-loaded one if exists\r\n        bmp = ResourceManager.Instance.GetBitmap(R.drawable.powerup1);\r\n        DisplayMetrics metrics=_view.getResources().getDisplayMetrics();\r\n        ScreenHeight = metrics.heightPixels;\r\n        ScreenWidth = metrics.widthPixels;\r\n\r\n        scaledbmp = Bitmap.createScaledBitmap(bmp,ScreenWidth/20,ScreenHeight/20,true);\r\n\r\n\r\n        isInit = true;\r\n    }\r\n\r\n    @Override\r\n    public void Update(float _dt) {\r\n\r\n        if(GameSystem.Instance.GetIsPaused())\r\n            return;\r\n\r\n        xPos -= _dt * 100;\r\n        // Delete Powerup outside of screen\r\n        if(xPos < -ScreenWidth)\r\n        {\r\n            SetIsDone(true);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void Render(Canvas _canvas) {\r\n        _canvas.drawBitmap(scaledbmp,xPos,yPos, null);\r\n    }\r\n\r\n    @Override\r\n    public boolean IsInit() {\r\n\r\n        return isInit;\r\n    }\r\n\r\n    @Override\r\n    public int GetRenderLayer() {\r\n        return LayerConstants.UI_LAYER;\r\n    }\r\n\r\n    @Override\r\n    public void SetRenderLayer(int _newLayer) {\r\n        return;\r\n    }\r\n\r\n\r\n\r\n    @Override\r\n    public ENTITY_TYPE GetEntityType(){ return ENTITY_TYPE.ENT_TICKPOWERUP;}\r\n\r\n    public static PowerUp1 Create(float xPosition, float yPosition, EarthEntity earthEntity)\r\n    {\r\n        PowerUp1 result = new PowerUp1(xPosition,yPosition,earthEntity);\r\n        EntityManager.Instance.AddEntity(result, ENTITY_TYPE.ENT_ACPOWERUP);\r\n        return result;\r\n    }\r\n\r\n    @Override\r\n    public String GetType() {\r\n        return \"AirConPowerUp\";\r\n    }\r\n\r\n    @Override\r\n    public float GetPosX() {\r\n        return xPos;\r\n    }\r\n\r\n    @Override\r\n    public float GetPosY() {\r\n        return yPos;\r\n    }\r\n\r\n    @Override\r\n    public float GetRadius() {\r\n        return scaledbmp.getWidth();\r\n    }\r\n\r\n    @Override\r\n    public void OnHit(Collidable _other) {\r\n        if(_other.GetType() != this.GetType()\r\n                && _other.GetType() == \"PlayerEntity\") {  // Another entity\r\n            earthEntity.SetHealthPoints(earthEntity.GetHealthPoints() + 20);\r\n            SetIsDone(true);\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/week4real/PowerUp1.java b/app/src/main/java/com/example/week4real/PowerUp1.java
--- a/app/src/main/java/com/example/week4real/PowerUp1.java	(revision 06625655675e8faf1ac84d84a1b7dbfa2d8144e2)
+++ b/app/src/main/java/com/example/week4real/PowerUp1.java	(date 1639143923762)
@@ -116,7 +116,7 @@
 
     @Override
     public float GetRadius() {
-        return scaledbmp.getWidth();
+        return (scaledbmp.getWidth() * 0.5f);
     }
 
     @Override
Index: app/src/main/java/com/example/week4real/Smurf.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.week4real;\r\n\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.BitmapFactory;\r\nimport android.graphics.Canvas;\r\nimport android.graphics.Matrix;\r\nimport android.util.DisplayMetrics;\r\nimport android.view.SurfaceView;\r\n\r\nimport java.util.Random;\r\n\r\npublic class Smurf implements EntityBase , Collidable{\r\n    private boolean isDone = false;\r\n    private Bitmap bmp = null, scaledbmp = null;\r\n\r\n    boolean IsGoingUp = false;\r\n\r\n    int ScreenWidth, ScreenHeight;\r\n    private float xPos, yPos, offset;\r\n\r\n    int spriteCounter = 0;\r\n\r\n    private SurfaceView view = null;\r\n    Matrix tfx = new Matrix();\r\n    DisplayMetrics metrics;\r\n\r\n    float lifetime;\r\n\r\n    private Sprite spritesmurf = null;\r\n\r\n\r\n    private boolean hasTouched = false; // New to Week 8\r\n\r\n    //check if anything to do with entity (use for pause)\r\n    @Override\r\n    public boolean IsDone() {\r\n        return isDone;\r\n    }\r\n\r\n    @Override\r\n    public void SetIsDone(boolean _isDone) {\r\n        isDone = _isDone;\r\n    }\r\n\r\n    @Override\r\n    public void Init(SurfaceView _view) {\r\n        bmp = BitmapFactory.decodeResource(_view.getResources(), R.drawable.ship2_1);\r\n        bmp = ResourceManager.Instance.GetBitmap( R.drawable.ship2_1);\r\n\r\n        metrics = _view.getResources().getDisplayMetrics();\r\n\r\n        ScreenHeight = metrics.heightPixels;\r\n        ScreenWidth = metrics.widthPixels;\r\n\r\n        // New to Week 8\r\n        // Using Sprite animation class to load our sprite sheet\r\n        spritesmurf = new Sprite(ResourceManager.Instance.GetBitmap(R.drawable.mainsprite),1,6, 5 );\r\n\r\n\r\n        // Define how we want the player to react or if it is enemy or obstacles, how it is going to appear as.\r\n        // You should have this part!\r\n\r\n        xPos = 0.1f * ScreenWidth;\r\n        yPos = 0.7f * ScreenHeight;\r\n    }\r\n\r\n    @Override\r\n    public void Update(float _dt) {\r\n        // Week 8\r\n\r\n        if (GameSystem.Instance.GetIsPaused())\r\n            return;\r\n\r\n        spritesmurf.Update(_dt);\r\n\r\n//        lifetime -= _dt;\r\n//        if (lifetime < 0.0f) {\r\n//            SetIsDone(true);   // <--- This part here or this code, meant when time is up, kill the items.\r\n//        }\r\n        if (TouchManager.Instance.IsDown())\r\n        {   // Previous and it is for just a touch - useful for collision with a image (example button)\r\n            IsGoingUp = true;\r\n            spriteCounter = 1;\r\n        }\r\n        else\r\n        {\r\n            IsGoingUp = false;\r\n            spriteCounter = 0;\r\n        }\r\n\r\n        if (IsGoingUp)\r\n        {\r\n            yPos -= 300 * _dt;\r\n        }\r\n        else\r\n        {\r\n            yPos += 300 * _dt;\r\n        }\r\n\r\n        if (yPos < spritesmurf.GetHeight() / 2)\r\n        {\r\n            yPos = spritesmurf.GetHeight() / 2;\r\n        }\r\n\r\n        if(yPos > 0.7f * ScreenHeight)\r\n        {\r\n            yPos = 0.7f * ScreenHeight;\r\n        }\r\n//        if (TouchManager.Instance.HasTouch())  // Touch and drag\r\n//        {\r\n//            // Check collision with the smurf sprite\r\n//            float imgRadius1 = spritesmurf.GetWidth() * 0.5f;\r\n//            if (Collision.SphereToSphere(TouchManager.Instance.GetPosX(), TouchManager.Instance.GetPosY(), 0.0f, xPos, yPos, imgRadius1) || hasTouched) {\r\n//                hasTouched = true;\r\n//                xPos = TouchManager.Instance.GetPosX();\r\n//                yPos = TouchManager.Instance.GetPosY();\r\n//\r\n//            }\r\n//        }\r\n    }\r\n    @Override\r\n    public void Render(Canvas _canvas) {\r\n            // New to Week 8\r\n//            spritesmurf.Render(_canvas, (int)xPos, (int)yPos);  // Location can be changed!\r\n            if (spriteCounter == 0)\r\n            {\r\n                spritesmurf.Render(_canvas, (int)xPos, (int)yPos);\r\n            }\r\n            else\r\n            {\r\n                spritesmurf.Render(_canvas, (int)xPos, (int)yPos);\r\n            }\r\n\r\n\r\n    }\r\n\r\n    @Override\r\n    public boolean IsInit() {\r\n        return bmp != null;\r\n    }\r\n\r\n    @Override\r\n    public int GetRenderLayer() {\r\n        return LayerConstants.PLAYER_LAYER;\r\n    }\r\n\r\n    @Override\r\n    public void SetRenderLayer(int _newLayer) {\r\n\r\n    }\r\n\r\n\r\n\r\n    @Override\r\n    public ENTITY_TYPE GetEntityType() {\r\n        return ENTITY_TYPE.ENT_DEFAULT;\r\n    }\r\n\r\n    public static Smurf Create() {\r\n        Smurf result = new Smurf();\r\n        EntityManager.Instance.AddEntity(result, ENTITY_TYPE.ENT_DEFAULT);\r\n        return result;\r\n    }\r\n\r\n    @Override\r\n    public String GetType() {\r\n        return \"PlayerEntity\";\r\n    }\r\n\r\n    @Override\r\n    public float GetPosX() {\r\n        return xPos;\r\n    }\r\n\r\n    @Override\r\n    public float GetPosY() {\r\n        return yPos;\r\n    }\r\n\r\n    @Override\r\n    public float GetRadius() {\r\n        return spritesmurf.GetWidth();\r\n    }\r\n\r\n    @Override\r\n    public void OnHit(Collidable _other) {\r\n//        if(_other.GetType() != this.GetType()\r\n//                && _other.GetType() ==  \"Platform\") {  // Another entity\r\n//        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/week4real/Smurf.java b/app/src/main/java/com/example/week4real/Smurf.java
--- a/app/src/main/java/com/example/week4real/Smurf.java	(revision 06625655675e8faf1ac84d84a1b7dbfa2d8144e2)
+++ b/app/src/main/java/com/example/week4real/Smurf.java	(date 1639143923747)
@@ -179,7 +179,7 @@
 
     @Override
     public float GetRadius() {
-        return spritesmurf.GetWidth();
+        return (spritesmurf.GetWidth() * 0.5f);
     }
 
     @Override
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"GradleSettings\">\r\n    <option name=\"linkedExternalProjectsSettings\">\r\n      <GradleProjectSettings>\r\n        <option name=\"testRunner\" value=\"GRADLE\" />\r\n        <option name=\"distributionType\" value=\"DEFAULT_WRAPPED\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"modules\">\r\n          <set>\r\n            <option value=\"$PROJECT_DIR$\" />\r\n            <option value=\"$PROJECT_DIR$/app\" />\r\n          </set>\r\n        </option>\r\n        <option name=\"resolveModulePerSourceSet\" value=\"false\" />\r\n      </GradleProjectSettings>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/gradle.xml b/.idea/gradle.xml
--- a/.idea/gradle.xml	(revision 06625655675e8faf1ac84d84a1b7dbfa2d8144e2)
+++ b/.idea/gradle.xml	(date 1639129929590)
@@ -1,5 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
+  <component name="GradleMigrationSettings" migrationVersion="1" />
   <component name="GradleSettings">
     <option name="linkedExternalProjectsSettings">
       <GradleProjectSettings>
Index: app/src/main/java/com/example/week4real/Platform.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.week4real;\r\n\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.BitmapFactory;\r\nimport android.graphics.Canvas;\r\nimport android.util.DisplayMetrics;\r\nimport android.view.SurfaceView;\r\n\r\nimport androidx.annotation.NonNull;\r\n\r\nimport java.util.Set;\r\n\r\npublic class Platform implements EntityBase, Collidable{\r\n\r\n    private Bitmap bmp = null;\r\n    private boolean isDone = false;\r\n    private float xPos,yPos;\r\n    private boolean isInit = false;\r\n    private boolean hasTouched = false;\r\n    public int ScreenWidth, ScreenHeight;\r\n    Platform()\r\n    {\r\n\r\n    }\r\n\r\n    Platform(float xPosition, float yPosition){\r\n        xPos = xPosition;\r\n        yPos = yPosition;\r\n    }\r\n\r\n    @Override\r\n    public boolean IsDone() {\r\n        return isDone;\r\n    }\r\n    @Override\r\n    public void SetIsDone(boolean _isDone) {\r\n        isDone = _isDone;\r\n    }\r\n    @Override\r\n    public void Init(SurfaceView _view) {\r\n        bmp = ResourceManager.Instance.GetBitmap(R.drawable.platform);\r\n        DisplayMetrics metrics = _view.getResources().getDisplayMetrics();\r\n        ScreenWidth = metrics.widthPixels;\r\n        ScreenHeight = metrics.heightPixels;\r\n        isInit = true;\r\n    }\r\n    @Override\r\n     public void Update(float _dt) {\r\n\r\n        if(GameSystem.Instance.GetIsPaused())\r\n            return;\r\n\r\n        xPos -= _dt * 100;\r\n\r\n        // Delete Platform outside of screen\r\n        if(xPos < -ScreenWidth)\r\n        {\r\n            SetIsDone(true);\r\n        }\r\n    }\r\n    @Override\r\n    public void Render(Canvas _canvas){\r\n        // Basic Rendering\r\n        _canvas.drawBitmap(bmp, xPos, yPos ,null);\r\n        return;\r\n    }\r\n    @Override\r\n    public boolean IsInit(){\r\n        return isInit;\r\n    }\r\n    @Override\r\n    public int GetRenderLayer(){\r\n        return LayerConstants.GAMEOBJECTS_LAYER;\r\n    }\r\n    @Override\r\n    public void SetRenderLayer(int _newLayer){\r\n        return;\r\n    }\r\n\r\n    @NonNull\r\n    public static Platform Create(float xPosition, float yPosition){\r\n        Platform object = new Platform(xPosition,yPosition);\r\n        EntityManager.Instance.AddEntity(object,ENTITY_TYPE.ENT_PLATFORM);\r\n        return object;\r\n    }\r\n/*\r\n    public static Platform Create(int _layer,float xPosition, float yPosition){\r\n        Platform object = Create(xPosition,yPosition);\r\n        object.SetRenderLayer(_layer);\r\n        return object;\r\n    }\r\n*/\r\n\r\n\r\n    @Override\r\n    public String GetType() {\r\n        return \"Platform\";\r\n    }\r\n\r\n    @Override\r\n    public float GetPosX() {\r\n    return xPos;\r\n}\r\n\r\n    @Override\r\n    public float GetPosY() {\r\n        return yPos;\r\n    }\r\n\r\n\r\n    @Override\r\n    public float GetRadius() {\r\n        return bmp.getWidth();\r\n    }\r\n    @Override\r\n    public ENTITY_TYPE GetEntityType(){\r\n        return ENTITY_TYPE.ENT_PLATFORM;\r\n    }\r\n\r\n    @Override\r\n    public void OnHit(Collidable _other) {\r\n//        if(_other.GetType() != this.GetType()\r\n//                && _other.GetType() == \"PlayerEntity\") {  // Another entity\r\n//\r\n//        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/week4real/Platform.java b/app/src/main/java/com/example/week4real/Platform.java
--- a/app/src/main/java/com/example/week4real/Platform.java	(revision 06625655675e8faf1ac84d84a1b7dbfa2d8144e2)
+++ b/app/src/main/java/com/example/week4real/Platform.java	(date 1639145811792)
@@ -4,6 +4,7 @@
 import android.graphics.BitmapFactory;
 import android.graphics.Canvas;
 import android.util.DisplayMetrics;
+import android.util.Log;
 import android.view.SurfaceView;
 
 import androidx.annotation.NonNull;
